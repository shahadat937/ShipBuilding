@using RMS.Utility

@model RMS.Web.Models.ViewModel.UserViewModel
@{
    ViewBag.Title = "User information";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<style>
    .webgrid-header th {
        color: white;
    }

        .webgrid-header th a {
            color: white;
        }
</style>
<div class="row">
    <div class="panel panel-primary">
        <div class="panel-heading" style="text-align:center;">
            User Information
        </div>
        <div class="panel-body">
            <table>
                <tr>
                    <td>@Html.ActionLink("Add New", "Edit", "User", new { @class = "btn btn-info" })</td>
                    <td>
                        @using (Html.BeginForm("SearchByKey", "User", FormMethod.Get))
                        {

                            <table>
                                <tr>
                                    <td>
                                        @Html.TextBoxFor(x => x.SearchKey, new { @class = "textBoxsize form-control", tabindex = 1, autofocus = "autofocus", placeholder = "User ID No or Branch Name" })
                                    </td>
                                    <td>
                                        <button class="custom-serach-btn"><i class="fa fa-search" aria-hidden="true"></i></button>
                                    </td>
                                </tr>
                            </table>
                        }
                    </td>
                </tr>
            </table>
            <div class="row">
                <div class="col-sm-12">
                    <div class="col-md-12">
                        @if (Model.Message != null)
                        {
                            if (Model.IsSucceed == 1)
                            {
                                <div style="color:green">@Model.Message</div>
                            }
                            else
                            {
                                <div style="color:red">@Model.Message</div>
                            }
                        }
                    </div>
                </div>
            </div>
            <div class="">
                @{
                    var grid = new WebGrid(canPage: true, rowsPerPage: AppConfig.PageSize, canSort: true, ajaxUpdateContainerId: "grid");
                    grid.Bind(Model.Users, rowCount: Model.Users.Count, autoSortAndPage: true);
                    grid.Pager(WebGridPagerModes.All);
                    @grid.GetHtml(htmlAttributes: new { UserId = "grid" },
                tableStyle: "webgrid-table webgrid",
                headerStyle: "webgrid-header",
                footerStyle: "webgrid-footer",
                alternatingRowStyle: "webgrid-alternating-row",
                selectedRowStyle: "webgrid-selected-row",
                rowStyle: "webgrid-row-style",
                firstText: "First",
                lastText: "Last",
                nextText: "Next",
                mode: WebGridPagerModes.All,
                previousText: "Previous",
                columns: grid.Columns(
                                             grid.Column("Serial No", canSort: false, format: item => item.WebGrid.Rows.IndexOf(item) + 1 + Math.Round(Convert.ToDouble(grid.TotalRowCount / grid.PageCount) / grid.RowsPerPage) * grid.RowsPerPage * grid.PageIndex),

                                             //grid.Column("BranchInfo.BranchName", header: "Branch Name"),
                                    grid.Column("Role.RoleName", header: "Role Name"),
                                    grid.Column("UserName", header: "User ID"),
                                    grid.Column("PhoneNumber", header: "Mobile Number", canSort: false),
                                                      grid.Column("Email", header: "Email Address", canSort: false),
                                             grid.Column("WinPassword", header: "Is AD User"),
                                             grid.Column("ApprovedUser", header: "Status"),
                                    grid.Column("Edit", canSort: false, format: @<text> @Html.ActionLink("Edit", "Edit", "User", new { UserId = item.UserId, BranchInfoIdentity = item.BranchInfoIdentity }, new { @class = "btn btn-info" })</text>)
                    @*grid.Column("Delete", canSort: false, format: @<text> @Html.ActionLink("Delete", "Delete", "User", new { UserId = item.UserId }, new { @class = "btn btn-primary" })</text>)*@
));
                }
            </div>

        </div>
    </div>

</div>












