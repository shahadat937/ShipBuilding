@model RMS.Web.Models.ViewModel.UserViewModel
@{
    ViewBag.Title = "Change Password";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<link href="~/CommonDesign/commonBootStrap.css" rel="stylesheet" />
@using (Html.BeginForm("ChangePassword", "User", FormMethod.Post, new { @class = "UserForm" }))
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true)

    <div class="container-fluid">
        <fieldset class="scheduler-border">
            <legend class="scheduler-border">
            </legend>
            @*<div class="row">
                <div class="form-group">
                    <div class="col-sm-2 text-right nopadding">
                        @Html.Label("User ID:")
                    </div>
                    <div class="col-sm-3 text-left">
                        @Html.TextBoxFor(x => x.UserName, new { @class = "textBoxsize form-control", tabindex = 1, placeholder = "Enter User Name" })
                    </div>
                    <div class="col-sm-1 nopadding">
                        @Html.Label("Full Name:")
                    </div>
                    <div class="col-sm-6 text-left nopadding">
                        @Html.TextBoxFor(x => x.UserFullName, new { @class = "textBoxsize form-control", tabindex = 8, placeholder = "Enter User Full Name" })
                    </div>
                </div>
            </div>*@

            <div class="row">
                <div class="form-group">
                    <div class="col-sm-2 text-right nopadding">
                        @Html.Label("Old Password:")
                    </div>
                    <div class="col-sm-3 text-left">
                        @Html.PasswordFor(x => x.OldPassword, new { @class = "textBoxsize form-control", tabindex = 2, placeholder = "Enter Current Password" })
                    </div>
                    <div class="col-sm-2 text-right nopadding">
                        @Html.Label("New Password:")
                    </div>
                    <div class="col-sm-3 text-left">
                        @Html.PasswordFor(x => x.Password, new { @class = "textBoxsize form-control", tabindex = 2, placeholder = "Enter Password" })
                    </div>
                    <div class="col-sm-2 text-right nopadding">
                        @Html.Label("Confirm Password:")
                    </div>
                    <div class="col-sm-3 text-left">
                        @Html.PasswordFor(x => x.ConfirmPassword, new { @class = "textBoxsize form-control", tabindex = 2, placeholder = "Enter Confirm Password" })
                    </div>
                </div>
            </div>

            @*<div class="row">
                <div class="form-group">
                    <div class="col-sm-2 text-right nopadding">
                        @Html.Label("Confirm Password:")
                    </div>
                    <div class="col-sm-3">
                        @Html.PasswordFor(x => x.ConfirmPassword, new { @class = "textBoxsize form-control", tabindex = 3, placeholder = "Enter ConfirmPassword" })
                    </div>
                    <div class="col-sm-1 text-left nopadding">
                        @Html.Label("Bank Name:")

                    </div>
                    <div class="col-sm-6 text-left nopadding">
                        @Html.DropDownListFor(x => x.BankCode, Model.BankSelectdItemList, "-Select-", new { @class = "BankName dropdownsize form-control", tabindex = 10, @TargetClass = "DistrictName", @action = "/User/GetDistrictByBankCode" })

                    </div>
                </div>
            </div>

            <div class="row">
                <div class="form-group">
                    <div class="col-sm-2 text-right nopadding">
                        @Html.Label("Mobile number:")
                    </div>
                    <div class="col-sm-3 text-left">
                        @Html.TextBoxFor(x => x.PhoneNumber, new { @class = "textBoxsize form-control", tabindex = 4, placeholder = "Enter Mobile Number" })
                    </div>
                    <div class="col-sm-1 text-left nopadding">
                        @Html.Label("District Name:")
                    </div>
                    <div class="col-sm-6 text-left nopadding">
                        @Html.DropDownListFor(x => x.DistrictCode, Model.DistricSelectdItemList, "-Select-", new { @class = "DistrictName dropdownsize form-control", tabindex = 11, @TargetClass = "BranchName", @action = "/User/GetBranchNameByDistrict" })
                    </div>
                </div>
            </div>

            <div class="row">
                <div class="form-group">
                    <div class="col-sm-2 text-right nopadding">
                        @Html.Label("Email:")
                    </div>
                    <div class="col-sm-3">
                        @Html.TextBoxFor(x => x.Email, new { @class = "textBoxsize form-control", tabindex = 5, placeholder = "Enter Email" })
                    </div>
                    <div class="col-sm-1 text-left nopadding">
                        @Html.Label("Branch Name:")
                    </div>
                    <div class="col-sm-1 text-left nopadding">
                        @Html.DropDownListFor(x => x.BranchInfo, Model.BranchInfosSelectdItemList, "-Select-", new { @class = "BranchName dropdownsize form-control", tabindex = 12 })
                    </div>
                </div>
            </div>

            <div class="row">
                <div class="form-group">
                    <div class="col-sm-2 text-right nopadding">
                        @Html.Label("Security Qustion:")
                    </div>
                    <div class="col-sm-3">
                        @Html.DropDownListFor(x => x.SecurityQustion, Model.SecurityQustionSelectdItemList, "-Select-", new { @class = "dropdownsize form-control", tabindex = 6 })
                    </div>
                    <div class="col-sm-1 text-left nopadding">
                        @Html.Label("Verify Limit:")
                    </div>
                    <div class="col-sm-6 text-left nopadding">
                        @Html.TextBoxFor(x => x.VerifyLimit, new { @class = "textBoxsize form-control", placeholder = "Enter  Verify Limit", tabindex = 13 })
                    </div>
                </div>
            </div>

            <div class="row">
                <div class="form-group">
                    <div class="col-sm-2 text-right nopadding">
                        @Html.Label("Answer:")
                    </div>
                    <div class="col-sm-3">
                        @Html.TextBoxFor(x => x.Answer, new { @class = "textBoxsize form-control", placeholder = "Enter Answer", tabindex = 7 })
                    </div>
                    <div class="col-sm-1 text-left nopadding">
                        @Html.Label("Transaction Limit:")
                    </div>
                    <div class="col-sm-6 text-left nopadding">
                        @Html.TextBoxFor(x => x.TransLimit, new { @class = "textBoxsize form-control", placeholder = "Enter Transaction Limit", tabindex = 15 })

                    </div>
                </div>
            </div>*@
            <div class="row">
                <div class="form-group">
                    <div class="col-sm-offset-7">
                        &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<input type="submit" id="btnSave" value="Save" onclick="showhide()" class="btn btn-primary" tabindex=16 />
                    </div>
                </div>
            </div>

            <div class="row">
                <div class="col-sm-offset-4" id="newpost" style="color:green; padding-left:3px;">
                    <p>@TempData["message"]</p>
                </div>
            </div>
            <div>
                @Html.ActionLink("Show All User List", "Index", "User", new { tabindex = 17 })
            </div>
            <div>
                @if (ViewData["Error"] != null)
                {
                    <div class="red">
                        <p><strong>Error:</strong> @ViewData["Error"].ToString()</p>
                    </div>
                }
            </div>
        </fieldset>
    </div>
}

@section scripts
{
    <script type="text/javascript">
        function showhide() {
            var div = document.getElementById("newpost");
            if (div.style.display !== "none") {
                div.style.display = "none";
            }
        }

        function toUnicode(elmnt) {
            var next;
            if (elmnt.value.length == elmnt.maxLength) {
                next = elmnt.tabIndex + 1;
                //look for the fields with the next tabIndex
                var f = elmnt.form;
                for (var i = 0; i < f.elements.length; i++) {
                    if (next <= f.elements[i].tabIndex) {
                        f.elements[i].focus();
                        break;
                    }
                }
            }
        }

        $('.BankName').change(function () {
            var $BankNamedropdown = $(this);
            var targetClass = $BankNamedropdown.attr('TargetClass');
            var url = $BankNamedropdown.attr('action');

            var bankCode = $BankNamedropdown.val();
            var option = {
                url: url,
                type: 'GET',
                dataType: 'JSON',
                data: { bankCode: bankCode }
            };
            $.ajax(option).done(function (districts) {
                if (districts.length > 0) {
                    ClearDropDownList(targetClass);
                    $.each(districts, function () {
                        $("." + targetClass).append($("<option />").val(this.BranchCode).text(this.BranchName));
                    });
                } else {
                    NotFoundData(targetClass);
                }

            });
        });

        $('.DistrictName').change(function () {
            var $DistrictNamedropdown = $(this);
            var targetClass = $DistrictNamedropdown.attr('TargetClass');
            var url = $DistrictNamedropdown.attr('action');
            var districtCode = $DistrictNamedropdown.val();
            var option = {
                url: url,
                type: 'GET',
                dataType: 'JSON',
                data: { districtCode: districtCode }
            };
            $.ajax(option).done(function (brnchList) {
                if (brnchList.length > 0) {
                    ClearDropDownList(targetClass);
                    $.each(brnchList, function () {
                        $("." + targetClass).append($("<option />").val(this.BranchCode).text(this.BranchName));
                    });
                } else {
                    NotFoundData(targetClass);
                }

            });
        });
        function ClearDropDownList(selector) {
            $('.' + selector)
                .find('option').remove()
                .end().append($('<option>').text("-Select-").attr('value', ""));
        };

        function NotFoundData(targetClass) {
            $('.' + targetClass)
                         .append($('<option>').text("Not Found").attr('value', ""));
        };
    </script>
}

