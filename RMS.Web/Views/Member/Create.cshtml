@model RMS.Web.Models.ViewModel.MemberViewModel
@{
    ViewBag.Title = "Create";
}

<div class="container1" style="font-family:arial">
    <div class="col-md-2">
    </div>

    <div class="col-md-8">
        <div class="panel panel-info ">
            <div class="panel-heading custom-panel-heading" style="background-color: #D900A9; text-align: center; color: #fff;">
                Create Member
            </div>
            <div class="panel-body">
                @using (Html.BeginForm("Create", "Member", FormMethod.Post, new { enctype = "multipart/form-data"}))
                {
                    @Html.AntiForgeryToken()
                    @Html.HiddenFor(x=>x.Member.MemberId);
                    @*<div class="row">
                        <div class="col-sm-12 col-lg-12">
                            <div class="form-group">
                                <label class="col-sm-3 col-md-3 col-lg-3">Staff Reqirement &nbsp;<i class=" fa fa-asterisk" style="font-size:9px;color:red;position:absolute;" aria-hidden="true"></i></label>
                                <div class="col-md-5">
                                    @Html.DropDownListFor(x => x.Member.CommiteeId, Model.CommiteeSelectListItems, "--Select--", new { id = "ddlProject", @class = "form-control", required = "required"  })
                                </div>
                                <div class="col-md-4">
                                    @Html.ValidationMessageFor(x => x.Member.CommiteeId)
                                </div>

                            </div>
                        </div>
                    </div>*@
                    <div class="row">
                        <div class="col-sm-12 col-lg-12">
                            <div class="form-group">
                                <label class="col-sm-3 col-md-3 col-lg-3"> P /O Number &nbsp;<i class=" fa fa-asterisk" style="font-size:9px;color:red;position:absolute;" aria-hidden="true"></i></label>
                                <div class="col-md-5">
                                    @Html.TextBoxFor(x => x.Member.OfficeId, null, new { id = "txtMemberName", @class = "txtMember form-control",required = "required"  })
                                </div>
                                <div class="col-md-4">
                                    @Html.ValidationMessageFor(x => x.Member.OfficeId)
                                </div>

                            </div>
                        </div>
                    </div>
                          <div class="row">
                        <div class="col-sm-12 col-lg-12">
                            <div class="form-group">
                                <label class="col-sm-3 col-md-3 col-lg-3"> Rank &nbsp;<i class=" fa fa-asterisk" style="font-size:9px;color:red;position:absolute;" aria-hidden="true"></i></label>
                                <div class="col-md-5">
                                    @Html.DropDownListFor(x => x.Member.Rank, Model.RankSelectListItems, "--Select--", new {  @class = "form-control", required = "required" })
                                </div>
                                <div class="col-md-4">
                                    @Html.ValidationMessageFor(x => x.Member.Rank)
                                </div>

                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-sm-12 col-lg-12">
                            <div class="form-group">
                                <label class="col-sm-3 col-md-3 col-lg-3">Member Name &nbsp;<i class=" fa fa-asterisk" style="font-size:9px;color:red;position:absolute;" aria-hidden="true"></i></label>
                                <div class="col-md-5">
                                    @Html.TextBoxFor(x => x.Member.MemberName, null, new { id = "txtMemberName", @class = "txtMember form-control",required = "required"  })
                                </div>
                                <div class="col-md-4">
                                    @Html.ValidationMessageFor(x => x.Member.MemberName)
                                </div>

                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-sm-12 col-lg-12">
                            <div class="form-group">
                                <label class="col-sm-3 col-md-3 col-lg-3">Email </label>
                                <div class="col-md-5">
                                    @Html.TextBoxFor(x => x.Member.Email, null, new { id = "txtEmail", @class = "txtMember form-control"  })
                                </div>
                                <div class="col-md-4">
                                    @Html.ValidationMessageFor(x => x.Member.Email)
                                </div>

                            </div>
                        </div>
                    </div>

                    <div class="row">
                        <div class="col-sm-12 col-lg-12">
                            <div class="form-group">
                                <label class="col-sm-3 col-md-3 col-lg-3">Phone No </label>
                                <div class="col-md-5">
                                    @Html.TextBoxFor(x => x.Member.PhoneNo, null, new { id = "txtPhoneNo", @class = "txtMember form-control"  })
                                </div>
                                <div class="col-md-4">
                                    @Html.ValidationMessageFor(x => x.Member.PhoneNo)
                                </div>

                            </div>
                        </div>
                    </div>

              
                    <div class="row">
                        <div class="col-sm-12 col-lg-12">
                            <div class="form-group">
                                <div class="col-md-8">
                                    @Html.ActionLink("Back To List", "Index", "Member", null, new { @class = "btn btn-info" })
                                    <input type="submit" id="btnCreateMember" class="btn btn-info pull-right" value="Create" />
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="row">
                <div class="col-sm-12 col-lg-12">
                        @if (@Model.SuccessMessage !=null)
                        {
                            <div style="color:green">@Model.SuccessMessage</div>
                        }
                        else
                        {
                            <div style="color:red">@Model.FailedMessage</div>
                        }
                    
                </div>
            </div>
                }
            </div>
        </div>

    </div>
    <div class="col-md-2">
        <div class="modal fade" id="mySuccessModel" role="dialog" tabindex="-1" data-keyboard="false" data-backdrop="static">
            <div class="modal-dialog modal-sm">
                <div class="modal-content">
                    <div class="modal-body">
                        <button type="button" class="close" data-dismiss="modal">&times;</button>
                        <h4 class="modal-title" id="SuccessMessage" style="color:green">Member Created Successfully!</h4>
                    </div>
                </div>
            </div>
        </div>
    </div>


    <div class="modal fade" id="myFailedModel" role="dialog" tabindex="-1" data-keyboard="false" data-backdrop="static">
        <div class="modal-dialog modal-sm">
            <div class="modal-content">
                <div class="modal-body">
                    <button type="button" class="close" data-dismiss="modal">&times;</button>
                    <h4 class="modal-title" id="FailedMessage" style="color:red">Member Creation Failed!</h4>
                </div>
            </div>
        </div>
    </div>

</div>

@section scripts{
    <script>

        //$('#btnCreateMember').unbind('click').bind('click', function() {
        //    var form = $("#formCreateMember");
        //    if (jQuery.validator && jQuery.validator.unobtrusive) {
        //        form.validate();
        //        if (!form.valid()) {
        //            return false;
        //        } else {
        //            var data = form.serialize();
        //            var button = $('#btnCreateMember');
        //            var target = $(button.attr('data-target'));
        //            $.ajax(
        //                {
        //                    url: "/Member/Create",
        //                    method: "post",
        //                    data: data,
        //                    dataType: "html",
        //                    success: function(resp) {
        //                        $("#mySuccessModel").modal('show');
        //                         $(".txtMember").val('');
        //                    },
        //                    error: function(err) {
        //                        $("#myFailedModel").modal('show');
        //                    }
        //                });
        //        }
        //    }

        //});


        //$('#formCreateMember').submit(function () {
        //    $.ajax({
        //        url: "/Member/Create",
        //        type: 'POST',
        //        data: new FormData(this),
        //        processData: false,
        //        contentType: false,
        //    }).done(function (response) {
        //        $("#mySuccessModel").modal('show');
        //        $(".txtMember").val('');


        //    });
        //});

    </script>



}
