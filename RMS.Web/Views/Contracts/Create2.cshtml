@model RMS.Web.Models.ViewModel.ContractViewModel
@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@*<style>
    th {
        text-align: left;
    }

    td {
        padding: 5px;
    }
</style>*@
<div style="width:700px; padding:5px; background-color:white;">
    @using (Html.BeginForm("Create", "Contracts", FormMethod.Post))
    {
        @Html.AntiForgeryToken()
        @Html.HiddenFor(x => x.Contract.ContractFileId)
        @*@Html.ValidationSummary(true)*@
        if (Model.Message != null)
        {
            <div style="border:solid 1px green">
                @ViewBag.Message
            </div>
        }

        <div><a href="#" id="addNew">Add New</a></div>
        <table id="dataTable" border="0" cellpadding="0" cellspacing="0">
            <tr>
                <th>Contract Field</th>
                <th>Field Value</th>
            </tr>


            @for (int i = 0; i < Model.Contracts.Count; i++)
            {
                <tr style="border:1px solid black">
                    <td>@Html.DropDownListFor(a => a.Contracts[i].FieldId, Model.ContractFileSelectedItems)</td>
                    <td>@Html.TextBoxFor(a => a.Contracts[i].FieldValue)</td>
                    <td>
                        @if (i > 0)
                        {
                            <a href="#" class="remove">Remove</a>
                        }
                    </td>
                </tr>

            }
            }

        </table>
        <input type="submit" value="Save" />
    }
</div>

@* Here I will add Jquery Code for validation / dynamically add new rows / Remove rows etc *@

@section Scripts{
    @*@Scripts.Render("~/bundles/jqueryval")*@
    <script language="javascript">
        $(document).ready(function () {

            //1. Add new row
            $("#addNew").click(function (e) {
                e.preventDefault();
                var $tableBody = $("#dataTable");
                var $trLast = $tableBody.find("tr:last");
                var $trNew = $trLast.clone();

                var suffix = $trNew.find(':input:first').attr('name').match(/\d+/);
                $trNew.find("td:last").html('<a href="#" class="remove">Remove</a>');
                $.each($trNew.find(':input'), function (i, val) {
                    // Replaced Name
                    var oldN = $(this).attr('name');
                    var newN = oldN.replace('[' + suffix + ']', '[' + (parseInt(suffix) + 1) + ']');
                    $(this).attr('name', newN);
                    //Replaced value
                    var type = $(this).attr('type');
                    if (type.toLowerCase() == "text") {
                        $(this).attr('value', '');
                    }

                    // If you have another Type then replace with default value
                    $(this).removeClass("input-validation-error");

                });
                $trLast.after($trNew);

                // Re-assign Validation
                var form = $("form")
                    .removeData("validator")
                    .removeData("unobtrusiveValidation");
                $.validator.unobtrusive.parse(form);
            });

            // 2. Remove
            $('a.remove').live("click", function (e) {
                e.preventDefault();
                $(this).parent().parent().remove();
            });

        });
    </script>
}

